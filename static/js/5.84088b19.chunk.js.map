{"version":3,"sources":["oilRig.gif","Loading.js","../node_modules/@material-ui/styles/esm/getThemeProps/getThemeProps.js","../node_modules/@material-ui/styles/esm/withStyles/withStyles.js","../node_modules/@material-ui/core/esm/styles/withStyles.js","../node_modules/@material-ui/core/esm/utils/capitalize.js","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"names":["module","exports","useStyles","makeStyles","cont","marginTop","pic","width","Loading","classes","history","useHistory","useEffect","timer","setTimeout","push","clearTimeout","className","variant","src","loadingGif","alt","window","onload","location","href","getThemeProps","params","theme","name","props","propName","defaultProps","undefined","withStyles","stylesOrCreator","options","arguments","length","Component","defaultTheme","_options$withTheme","withTheme","stylesOptions","_objectWithoutProperties","classNamePrefix","_extends","displayName","WithStyles","React","forwardRef","ref","innerRef","other","more","useTheme","createElement","hoistNonReactStatics","withStylesWithoutDefault","capitalize","string","Error","_formatMuiErrorMessage","charAt","toUpperCase","slice","Container","_props$component","component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","clsx","root","concat","String","_defineProperty","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","margin","typography","caption","button","overline","srOnly","position","height","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock"],"mappings":"iIAAAA,EAAOC,QAAU,IAA0B,oC,iCCA3C,oHAMMC,EAAYC,aAAW,iBAAO,CAChCC,KAAM,CACFC,UAAW,QAEfC,IAAK,CACDD,UAAW,OACXE,MAAO,aAQA,SAASC,IACpB,IAAMC,EAAUP,IACZQ,EAAUC,cASd,OAPAC,qBAAU,WACN,IAAMC,EAAQC,YAAW,WACvBJ,EAAQK,KAAK,cACZ,KACH,OAAO,kBAAMC,aAAaH,MAC3B,CAACH,IAGA,kBAAC,IAAD,CAAWO,UAAWR,EAAQL,MAC1B,kBAAC,IAAD,CAAYc,QAAQ,MAApB,mCACA,6BACA,yBAAKC,IAAKC,IAAYH,UAAWR,EAAQH,IAAKe,IAAI,aAnB9DC,OAAOC,OAAS,WACZT,YAAW,WAAaQ,OAAOE,SAASC,KAAO,aAAe,O,kGChBnD,SAASC,EAAcC,GACpC,IAAIC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KACdC,EAAQH,EAAOG,MAEnB,IAAKF,IAAUA,EAAME,QAAUF,EAAME,MAAMD,GACzC,OAAOC,EAKT,IACIC,EADAC,EAAeJ,EAAME,MAAMD,GAG/B,IAAKE,KAAYC,OACSC,IAApBH,EAAMC,KACRD,EAAMC,GAAYC,EAAaD,IAInC,OAAOD,E,YCqGMI,EA9GE,SAAoBC,GACnC,IAAIC,EAAUC,UAAUC,OAAS,QAAsBL,IAAjBI,UAAU,GAAmBA,UAAU,GAAK,GAClF,OAAO,SAAUE,GACf,IAAIC,EAAeJ,EAAQI,aACvBC,EAAqBL,EAAQM,UAC7BA,OAAmC,IAAvBD,GAAwCA,EACpDZ,EAAOO,EAAQP,KACfc,EAAgBC,YAAyBR,EAAS,CAAC,eAAgB,YAAa,SAQpF,IAAIS,EAAkBhB,EAalB3B,EAAYC,YAAWgC,EAAiBW,YAAS,CACnDN,aAAcA,EACdD,UAAWA,EACXV,KAAMA,GAAQU,EAAUQ,YACxBF,gBAAiBA,GAChBF,IACCK,EAAaC,IAAMC,YAAW,SAAoBpB,EAAOqB,GACzCrB,EAAMrB,QAAxB,IAQImB,EAPAwB,EAAWtB,EAAMsB,SACjBC,EAAQT,YAAyBd,EAAO,CAAC,UAAW,aAKpDrB,EAAUP,EAAU4C,YAASA,YAAS,GAAIP,EAAUP,cAAeF,IAEnEwB,EAAOD,EAsBX,OApBoB,kBAATxB,GAAqBa,KAG9Bd,EAAQ2B,eAAcf,EAElBX,IACFyB,EAAO5B,EAAc,CACnBE,MAAOA,EACPC,KAAMA,EACNC,MAAOuB,KAMPX,IAAcY,EAAK1B,QACrB0B,EAAK1B,MAAQA,IAIGqB,IAAMO,cAAcjB,EAAWO,YAAS,CAC1DK,IAAKC,GAAYD,EACjB1C,QAASA,GACR6C,OAqCL,OATAG,IAAqBT,EAAYT,GAS1BS,I,QC5GId,IANf,SAAoBC,EAAiBC,GACnC,OAAOsB,EAAyBvB,EAAiBW,YAAS,CACxDN,aAAcA,KACbJ,M,gCCPL,8CAKe,SAASuB,EAAWC,GACjC,GAAsB,kBAAXA,EACT,MAAM,IAAIC,MAA6GC,YAAuB,IAGhJ,OAAOF,EAAOG,OAAO,GAAGC,cAAgBJ,EAAOK,MAAM,K,gCCVvD,gEAqEIC,EAAyBjB,cAAiB,SAAmBnB,EAAOqB,GACtE,IAAI1C,EAAUqB,EAAMrB,QAChBQ,EAAYa,EAAMb,UAClBkD,EAAmBrC,EAAMsC,UACzB7B,OAAiC,IAArB4B,EAA8B,MAAQA,EAClDE,EAAwBvC,EAAMwC,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAezC,EAAM0C,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkB3C,EAAM4C,SACxBA,OAA+B,IAApBD,EAA6B,KAAOA,EAC/CpB,EAAQT,YAAyBd,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,QAAS,aAE7G,OAAoBmB,gBAAoBV,EAAWO,YAAS,CAC1D7B,UAAW0D,YAAKlE,EAAQmE,KAAM3D,EAAWuD,GAAS/D,EAAQ+D,MAAOF,GAAkB7D,EAAQ6D,gBAA6B,IAAbI,GAAsBjE,EAAQ,WAAWoE,OAAOlB,YAAWmB,OAAOJ,OAC7KvB,IAAKA,GACJE,OAsDUnB,iBAnIK,SAAgBN,GAClC,MAAO,CAELgD,KAAMG,YAAgB,CACpBxE,MAAO,OACPyE,WAAY,OACZC,UAAW,aACXC,YAAa,OACbC,YAAavD,EAAMwD,QAAQ,GAC3BC,aAAczD,EAAMwD,QAAQ,GAC5BE,QAAS,SACR1D,EAAM2D,YAAYC,GAAG,MAAO,CAC7BL,YAAavD,EAAMwD,QAAQ,GAC3BC,aAAczD,EAAMwD,QAAQ,KAI9Bd,eAAgB,CACda,YAAa,EACbE,aAAc,GAIhBb,MAAOiB,OAAOC,KAAK9D,EAAM2D,YAAYI,QAAQC,QAAO,SAAUC,EAAKC,GACjE,IAAIC,EAAQnE,EAAM2D,YAAYI,OAAOG,GAQrC,OANc,IAAVC,IACFF,EAAIjE,EAAM2D,YAAYC,GAAGM,IAAe,CACtCpB,SAAUqB,IAIPF,IACN,IAGHG,WAAYjB,YAAgB,GAAInD,EAAM2D,YAAYC,GAAG,MAAO,CAC1Dd,SAAUuB,KAAKC,IAAItE,EAAM2D,YAAYI,OAAOQ,GAAI,OAIlDC,WAAYrB,YAAgB,GAAInD,EAAM2D,YAAYC,GAAG,MAAO,CAC1Dd,SAAU9C,EAAM2D,YAAYI,OAAOU,KAIrCC,WAAYvB,YAAgB,GAAInD,EAAM2D,YAAYC,GAAG,MAAO,CAC1Dd,SAAU9C,EAAM2D,YAAYI,OAAOY,KAIrCC,WAAYzB,YAAgB,GAAInD,EAAM2D,YAAYC,GAAG,MAAO,CAC1Dd,SAAU9C,EAAM2D,YAAYI,OAAOc,KAIrCC,WAAY3B,YAAgB,GAAInD,EAAM2D,YAAYC,GAAG,MAAO,CAC1Dd,SAAU9C,EAAM2D,YAAYI,OAAOgB,QA0EP,CAChC9E,KAAM,gBADOK,CAEZgC,I,gCC7IH,wDA2II0C,EAAwB,CAC1BC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,UAAW,KACXC,UAAW,KACXC,MAAO,IACPC,MAAO,KAELC,EAA0BtE,cAAiB,SAAoBnB,EAAOqB,GACxE,IAAIqE,EAAe1F,EAAM2F,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9C/G,EAAUqB,EAAMrB,QAChBQ,EAAYa,EAAMb,UAClByG,EAAe5F,EAAM6F,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CtD,EAAYtC,EAAMsC,UAClBwD,EAAiB9F,EAAMwD,QACvBA,OAA6B,IAAnBsC,EAA4B,UAAYA,EAClDC,EAAsB/F,EAAMgG,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAgBjG,EAAMkG,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBnG,EAAMoG,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAiBrG,EAAMZ,QACvBA,OAA6B,IAAnBiH,EAA4B,QAAUA,EAChDC,EAAwBtG,EAAMuG,eAC9BA,OAA2C,IAA1BD,EAAmCxB,EAAwBwB,EAC5E/E,EAAQT,YAAyBd,EAAO,CAAC,QAAS,UAAW,YAAa,QAAS,YAAa,UAAW,eAAgB,SAAU,YAAa,UAAW,mBAE7JS,EAAY6B,IAAc8D,EAAY,IAAMG,EAAenH,IAAY0F,EAAsB1F,KAAa,OAC9G,OAAoB+B,gBAAoBV,EAAWO,YAAS,CAC1D7B,UAAW0D,YAAKlE,EAAQmE,KAAM3D,EAAuB,YAAZC,GAAyBT,EAAQS,GAAoB,YAAVyG,GAAuBlH,EAAQ,QAAQoE,OAAOlB,YAAWgE,KAAUK,GAAUvH,EAAQuH,OAAQF,GAAgBrH,EAAQqH,aAAcI,GAAazH,EAAQyH,UAAqB,YAAVT,GAAuBhH,EAAQ,QAAQoE,OAAOlB,YAAW8D,KAAsB,YAAZnC,GAAyB7E,EAAQ,UAAUoE,OAAOlB,YAAW2B,MACvXnC,IAAKA,GACJE,OA0EUnB,iBApPK,SAAgBN,GAClC,MAAO,CAELgD,KAAM,CACJ0D,OAAQ,GAIVhB,MAAO1F,EAAM2G,WAAWjB,MAGxBD,MAAOzF,EAAM2G,WAAWlB,MAGxBmB,QAAS5G,EAAM2G,WAAWC,QAG1BC,OAAQ7G,EAAM2G,WAAWE,OAGzB5B,GAAIjF,EAAM2G,WAAW1B,GAGrBC,GAAIlF,EAAM2G,WAAWzB,GAGrBC,GAAInF,EAAM2G,WAAWxB,GAGrBC,GAAIpF,EAAM2G,WAAWvB,GAGrBC,GAAIrF,EAAM2G,WAAWtB,GAGrBC,GAAItF,EAAM2G,WAAWrB,GAGrBC,UAAWvF,EAAM2G,WAAWpB,UAG5BC,UAAWxF,EAAM2G,WAAWnB,UAG5BsB,SAAU9G,EAAM2G,WAAWG,SAG3BC,OAAQ,CACNC,SAAU,WACVC,OAAQ,EACRtI,MAAO,EACPuI,SAAU,UAIZC,UAAW,CACTC,UAAW,QAIbC,YAAa,CACXD,UAAW,UAIbE,WAAY,CACVF,UAAW,SAIbG,aAAc,CACZH,UAAW,WAIbhB,OAAQ,CACNc,SAAU,SACVM,aAAc,WACdC,WAAY,UAIdvB,aAAc,CACZwB,aAAc,UAIhBpB,UAAW,CACToB,aAAc,IAIhBC,aAAc,CACZ5B,MAAO,WAIT6B,aAAc,CACZ7B,MAAO/F,EAAM6H,QAAQC,QAAQC,MAI/BC,eAAgB,CACdjC,MAAO/F,EAAM6H,QAAQI,UAAUF,MAIjCG,iBAAkB,CAChBnC,MAAO/F,EAAM6H,QAAQM,KAAKL,SAI5BM,mBAAoB,CAClBrC,MAAO/F,EAAM6H,QAAQM,KAAKF,WAI5BI,WAAY,CACVtC,MAAO/F,EAAM6H,QAAQS,MAAMP,MAI7BQ,cAAe,CACb7E,QAAS,UAIX8E,aAAc,CACZ9E,QAAS,YAoHmB,CAChCzD,KAAM,iBADOK,CAEZqF","file":"static/js/5.84088b19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oilRig.34c9002b.gif\";","import React, { useEffect } from 'react';\nimport { Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport loadingGif from './oilRig.gif';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    cont: {\n        marginTop: '3rem'\n    },\n    pic: {\n        marginTop: '1rem',\n        width: '50rem'\n    }\n}));\n\nwindow.onload = function() {\n    setTimeout(function() { window.location.href = '/results'; }, 5000);\n};\n\nexport default function Loading() {\n    const classes = useStyles();\n    let history = useHistory();\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n          history.push('/results');\n        }, 4000);\n        return () => clearTimeout(timer);\n    }, [history]);\n\n    return (\n        <Container className={classes.cont}>\n            <Typography variant='h4'>Creating an optimal schedule...</Typography>\n            <hr />\n            <img src={loadingGif} className={classes.pic} alt=\"loading\"></img>\n        </Container>\n    )\n}","/* eslint-disable no-restricted-syntax */\nexport default function getThemeProps(params) {\n  var theme = params.theme,\n      name = params.name,\n      props = params.props;\n\n  if (!theme || !theme.props || !theme.props[name]) {\n    return props;\n  } // Resolve default props, code borrow from React source.\n  // https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221\n\n\n  var defaultProps = theme.props[name];\n  var propName;\n\n  for (propName in defaultProps) {\n    if (props[propName] === undefined) {\n      props[propName] = defaultProps[propName];\n    }\n  }\n\n  return props;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport makeStyles from '../makeStyles';\nimport getThemeProps from '../getThemeProps';\nimport useTheme from '../useTheme'; // Link a style sheet with a component.\n// It does not modify the component passed to it;\n// instead, it returns a new component, with a `classes` property.\n\nvar withStyles = function withStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (Component) {\n    var defaultTheme = options.defaultTheme,\n        _options$withTheme = options.withTheme,\n        withTheme = _options$withTheme === void 0 ? false : _options$withTheme,\n        name = options.name,\n        stylesOptions = _objectWithoutProperties(options, [\"defaultTheme\", \"withTheme\", \"name\"]);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (Component === undefined) {\n        throw new Error(['You are calling withStyles(styles)(Component) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n      }\n    }\n\n    var classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        var displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    var useStyles = makeStyles(stylesOrCreator, _extends({\n      defaultTheme: defaultTheme,\n      Component: Component,\n      name: name || Component.displayName,\n      classNamePrefix: classNamePrefix\n    }, stylesOptions));\n    var WithStyles = React.forwardRef(function WithStyles(props, ref) {\n      var classesProp = props.classes,\n          innerRef = props.innerRef,\n          other = _objectWithoutProperties(props, [\"classes\", \"innerRef\"]); // The wrapper receives only user supplied props, which could be a subset of\n      // the actual props Component might receive due to merging with defaultProps.\n      // So copying it here would give us the same result in the wrapper as well.\n\n\n      var classes = useStyles(_extends(_extends({}, Component.defaultProps), props));\n      var theme;\n      var more = other;\n\n      if (typeof name === 'string' || withTheme) {\n        // name and withTheme are invariant in the outer scope\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        theme = useTheme() || defaultTheme;\n\n        if (name) {\n          more = getThemeProps({\n            theme: theme,\n            name: name,\n            props: other\n          });\n        } // Provide the theme to the wrapped component.\n        // So we don't have to use the `withTheme()` Higher-order Component.\n\n\n        if (withTheme && !more.theme) {\n          more.theme = theme;\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Component, _extends({\n        ref: innerRef || ref,\n        classes: classes\n      }, more));\n    });\n    process.env.NODE_ENV !== \"production\" ? WithStyles.propTypes = {\n      /**\n       * Override or extend the styles applied to the component.\n       */\n      classes: PropTypes.object,\n\n      /**\n       * Use that prop to pass a ref to the decorated component.\n       * @deprecated\n       */\n      innerRef: chainPropTypes(PropTypes.oneOfType([PropTypes.func, PropTypes.object]), function (props) {\n        if (props.innerRef == null) {\n          return null;\n        }\n\n        return null; // return new Error(\n        //   'Material-UI: The `innerRef` prop is deprecated and will be removed in v5. ' +\n        //     'Refs are now automatically forwarded to the inner component.',\n        // );\n      })\n    } : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      WithStyles.displayName = \"WithStyles(\".concat(getDisplayName(Component), \")\");\n    }\n\n    hoistNonReactStatics(WithStyles, Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Exposed for test purposes.\n      WithStyles.Naked = Component;\n      WithStyles.options = options;\n      WithStyles.useStyles = useStyles;\n    }\n\n    return WithStyles;\n  };\n};\n\nexport default withStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { withStyles as withStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction withStyles(stylesOrCreator, options) {\n  return withStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default withStyles;","import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: capitalize(string) expects a string argument.\" : _formatMuiErrorMessage(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"sourceRoot":""}